"""
bzlmod defs
"""
module(
    name = "corevx",
    version = "1.0",
)

# Set up C++ toolchain with rules_cc
bazel_dep(name = "rules_cc", version = "0.0.9")

# Set up rules_foreign_cc
bazel_dep(name = "rules_foreign_cc", version = "0.12.0")

# Setup platforms for cross-compiling
bazel_dep(name = "platforms", version = "0.0.10")

# Set up rules_python
bazel_dep(name = "rules_python", version = "0.37.2")

# Load custom module
custom_extensions = use_extension("//build_tools/custom_repos.bzl", "custom_repos")

# Define pytorch repository
custom_extensions.custom_git_repository(
    name = "pytorch",
    remote = "https://github.com/pytorch/pytorch.git",
    commit = "7c98e70d44abc7a1aead68b6ea6c8adc8c554db5",
)

# Fetch OpenCL Headers (if available in Bazel Central Registry)
custom_extensions.custom_http_archive(
    name = "opencl_headers",
    url = "https://github.com/KhronosGroup/OpenCL-Headers/archive/refs/tags/v2023.04.17.tar.gz",
    strip_prefix = "OpenCL-Headers-2023.04.17",
    sha256 = "0ce992f4167f958f68a37918dec6325be18f848dee29a4521c633aae3304915d",
    build_file_content = """
        cc_library(
            name = "opencl_headers",
            hdrs = glob(["CL/*.h"]),
            includes = ["."],
            visibility = ["//visibility:public"],
        )
    """,
)
