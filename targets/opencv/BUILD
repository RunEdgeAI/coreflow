
cc_library(
    name = "opencv",
    srcs = [
        "source/internal_dataTranslator.cpp",
        "source/internal_publishKernels.cpp",
        "source/internal_vxNodes.cpp",
        "source/OpenCV_absDiff.cpp",
        "source/OpenCV_adaptiveThreshold.cpp",
        "source/OpenCV_add.cpp",
        "source/OpenCV_addWeighted.cpp",
        "source/OpenCV_bilateralFilter.cpp",
        "source/OpenCV_bitwiseAnd.cpp",
        "source/OpenCV_bitwiseNot.cpp",
        "source/OpenCV_bitwiseOr.cpp",
        "source/OpenCV_bitwiseXor.cpp",
        "source/OpenCV_blur.cpp",
        "source/OpenCV_boxFilter.cpp",
        "source/OpenCV_briskCompute.cpp",
        "source/OpenCV_briskDetector.cpp",
        "source/OpenCV_buildOpticalFlowPyramid.cpp",
        "source/OpenCV_buildPyramid.cpp",
        "source/OpenCV_canny.cpp",
        "source/OpenCV_compare.cpp",
        "source/OpenCV_convertScaleAbs.cpp",
        "source/OpenCV_cornerHarris.cpp",
        "source/OpenCV_cornerMinEigenVal.cpp",
        "source/OpenCV_countNonZero.cpp",
        "source/OpenCV_cvtColor.cpp",
        "source/OpenCV_dilate.cpp",
        "source/OpenCV_distanceTransform.cpp",
        "source/OpenCV_divide.cpp",
        "source/OpenCV_erode.cpp",
        "source/OpenCV_fastFeatureDetector.cpp",
        "source/OpenCV_fastNlMeansDenoising.cpp",
        "source/OpenCV_fastNlMeansDenoisingColored.cpp",
        "source/OpenCV_filter2D.cpp",
        "source/OpenCV_flip.cpp",
        "source/OpenCV_gaussianBlur.cpp",
        "source/OpenCV_goodFeaturesToTrackdetector.cpp",
        "source/OpenCV_integral.cpp",
        "source/OpenCV_laplacian.cpp",
        "source/OpenCV_medianBlur.cpp",
        "source/OpenCV_morphologyEx.cpp",
        "source/OpenCV_mserFeatureDetector.cpp",
        "source/OpenCV_multiply.cpp",
        "source/OpenCV_norm.cpp",
        "source/OpenCV_orbCompute.cpp",
        "source/OpenCV_orbDetector.cpp",
        "source/OpenCV_pyrDown.cpp",
        "source/OpenCV_pyrUp.cpp",
        "source/OpenCV_resize.cpp",
        "source/OpenCV_scharr.cpp",
        "source/OpenCV_sepFilter2D.cpp",
        "source/OpenCV_siftCompute.cpp",
        "source/OpenCV_siftDetect.cpp",
        "source/OpenCV_simpleBlobDetector.cpp",
        "source/OpenCV_sobel.cpp",
        "source/OpenCV_starFeatureDetector.cpp",
        "source/OpenCV_subtract.cpp",
        "source/OpenCV_surfCompute.cpp",
        "source/OpenCV_surfDetect.cpp",
        "source/OpenCV_threshold.cpp",
        "source/OpenCV_transpose.cpp",
        "source/OpenCV_warpAffine.cpp",
        "source/OpenCV_warpPerspective.cpp",
    ],
    hdrs = glob([
        "include/*.h",
    ]),
    includes = [
        "include",
    ],
    deps = [
        "//:corevx",
        "@opencv//:opencv",
        "//third_party:opencv-prebuilt"
    ],
    defines = [
        "USE_OPENCV_4=1",
        "USE_OPENCV_CONTRIB=0",
    ],
    visibility = ["//visibility:public"],
)

cc_shared_library(
    name = "openvx-opencv",
    deps = [":opencv"],
    visibility = ["//visibility:public"]
)

cc_import(
    name = "imported_openvx_opencv",
    deps = [":opencv"],
    shared_library = ":openvx-opencv",
    hdrs = glob(["include/*.h"]),
    includes = ["include"],
    visibility = ["//visibility:public"]
)